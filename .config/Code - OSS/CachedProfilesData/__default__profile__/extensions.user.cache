{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/pengu/.vscode-oss/extensions/extensions.json","path":"/home/pengu/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1751288452910,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.101.2","productDate":"2025-06-25T19:40:00.687Z","productCommit":"2901c5ac6db8a986a5666c3af51ff804d05af0d4","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"sourcegraph.cody-ai","uuid":"20d12578-788a-48ca-96b6-43abf885dc34"},"manifest":{"$schema":"package.schema.json","name":"cody-ai","private":true,"displayName":"Cody: AI Code Assistant","version":"1.106.2","publisher":"sourcegraph","license":"Apache-2.0","icon":"resources/sourcegraph.png","description":"Sourcegraph’s AI code assistant goes beyond individual dev productivity, helping enterprises achieve consistency and quality at scale with AI. & codebase context to help you write code faster. Cody brings you autocomplete, chat, and commands, so you can generate code, write unit tests, create docs, and explain complex code using AI. Choose from the best LLMs, including GPT-4o and Claude Sonnet 4.","scripts":{"build:root":"pnpm -C .. run -s build","postinstall":"pnpm download-wasm && pnpm download-fonts && pnpm copy-win-ca-roots","dev":"pnpm run -s dev:desktop","dev:insiders":"pnpm run -s dev:desktop:insiders","start:dev:desktop":"ts-node scripts/run-with-extension-development-path.ts code --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --inspect-extensions=9333 --new-window . --goto ./src/completions/inline-completion-item-provider.ts:16:5","dev:desktop":"pnpm run -s build:dev:desktop && pnpm run start:dev:desktop","dev:desktop:insiders":"pnpm run -s build:dev:desktop && ts-node scripts/run-with-extension-development-path.ts code-insiders --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --inspect-extensions=9333 --new-window . --goto ./src/completions/inline-completion-item-provider.ts:16:5","dev:web":"pnpm run -s build:dev:web && pnpm run -s _dev:vscode-test-web --browserType none","watch:dev:web":"concurrently \"pnpm run -s watch:build:dev:web\" \"pnpm run -s _dev:vscode-test-web --browserType none\"","_dev:vscode-test-web":"vscode-test-web --extensionDevelopmentPath=. ${WORKSPACE-test/fixtures/workspace}","build":"pnpm run -s check:build && tsc --build && pnpm run -s _build:esbuild:desktop && pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production","check:build":"pnpm run -s check:typehacks && pnpm run -s check:manifest","check:typehacks":"ts-node-transpile-only ./scripts/enable-typehacks.ts && tsc -p tsconfig.typehacks.json","check:manifest":"ts-node-transpile-only ./scripts/validate-package-json.ts","_build:desktop":"pnpm run -s _build:esbuild:desktop && pnpm run -s _build:webviews --mode production","_build:web":"pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production","build:dev:desktop":"concurrently \"pnpm run -s _build:esbuild:desktop\" \"pnpm run -s _build:webviews --mode development\"","build:dev:web":"concurrently \"pnpm run -s _build:esbuild:web\" \"pnpm run -s _build:webviews --mode development\"","build:prod:webviews":"pnpm run -s _build:webviews --mode production","watch:build:dev:web":"concurrently \"pnpm run -s _build:esbuild:web --watch\" \"pnpm run -s _build:webviews --mode development --watch\"","watch:build:dev:desktop":"concurrently \"pnpm run -s _build:esbuild:desktop --watch\" \"pnpm run -s _build:webviews --mode development --watch\"","_build:esbuild:desktop":"pnpm download-wasm && pnpm download-fonts && pnpm run -s _build:esbuild:uninstall && pnpm run -s _build:esbuild:node","_build:esbuild:node":"esbuild ./src/extension.node.ts --bundle --outfile=dist/extension.node.js --loader:.node=copy --external:vscode --external:typescript --alias:@sourcegraph/cody-shared=@sourcegraph/cody-shared/src/index --alias:@sourcegraph/cody-shared/src=@sourcegraph/cody-shared/src --alias:lexical=./build/lexical-package-fix --format=cjs --platform=node --sourcemap --target=es2022","_build:esbuild:web":"esbuild ./src/extension.web.ts --platform=browser --bundle --outfile=dist/extension.web.js --alias:@sourcegraph/cody-shared=@sourcegraph/cody-shared/src/index --alias:@sourcegraph/cody-shared/src=@sourcegraph/cody-shared/src --alias:path=path-browserify --external:typescript --alias:node:path=path-browserify --alias:node:os=os-browserify --alias:os=os-browserify --external:vscode  --external:node:child_process  --external:node:util --external:node:fs --external:node:fs/promises --external:node:process --define:process='{\"env\":{}}' --define:window=self --format=cjs --sourcemap","_build:esbuild:uninstall":"node ./uninstall/esbuild.mjs","_build:webviews":"vite -c webviews/vite.config.mts build","_build:vsix_for_test":"vsce package --no-dependencies --out dist/cody.e2e.vsix","release":"ts-node-transpile-only ./scripts/release.ts","download-wasm":"ts-node-transpile-only ./scripts/download-wasm-modules.ts","download-fonts":"ts-node-transpile-only ./scripts/download-fonts.ts","copy-win-ca-roots":"ts-node-transpile-only ./scripts/copy-win-ca-roots.ts","release:dry-run":"pnpm run download-wasm && pnpm run download-fonts && cross-env CODY_RELEASE_DRY_RUN=1 ts-node ./scripts/release.ts","storybook":"storybook dev -p 6007 --no-open --no-version-updates","test:e2e":"playwright install && tsc --build && node dist/tsc/test/e2e/install-deps.js && pnpm run -s _build:vsix_for_test && pnpm run -s build:dev:desktop && pnpm run -s test:e2e:run","test:e2e:run":"playwright test","test:e2e2":"pnpm -s test:e2e2:deps && pnpm -s build:root && pnpm -s build:dev:desktop && pnpm -s test:e2e2:run","test:e2e2:run":"playwright test -c playwright.v2.config.ts","test:e2e2:deps":"playwright install chromium --with-deps","test:integration":"tsc --build ./test/integration && pnpm run -s build:dev:desktop && node --inspect -r ts-node/register dist/tsc/test/integration/main.js","test:unit":"vitest","bench":"vitest bench","vscode:prepublish":"pnpm -s run build","vscode:uninstall":"node ./dist/post-uninstall.js","test:unit:tree-sitter-queries":"vitest ./src/tree-sitter/query-tests/*.test.ts","release-notes":"ts-node-transpile-only ./scripts/release-notes.ts"},"categories":["AI","Chat","Programming Languages","Machine Learning","Snippets","Education"],"keywords":["cody","codey","sourcegraph","chop","autocomplete","chat","chatbot","codegen","code completion","code analysis","code generation","documentation","refactor","test","generate","openai","anthropic","gemini","gpt-4","claude","intellisense","openai","ai","assistant","llm","bot","model","typescript","javascript","python","golang","rust","go","html","css","java","php","swift","kotlin","ollama"],"repository":{"type":"git","url":"https://github.com/sourcegraph/cody","directory":"vscode"},"bugs":{"url":"https://github.com/sourcegraph/cody/issues"},"homepage":"https://sourcegraph.com/docs/cody","badges":[{"url":"https://img.shields.io/discord/969688426372825169?color=5765F2","href":"https://srcgr.ph/discord","description":"Discord"}],"engines":{"vscode":"^1.79.0","node":">=20.0.0"},"main":"./dist/extension.node.js","browser":"./dist/extension.web.js","activationEvents":["onLanguage","onStartupFinished","onWebviewPanel:cody.editorPanel"],"contributes":{"colors":[{"id":"cody.fixup.conflictBackground","description":"The background of text Cody will edit where there is a specific conflict with your changes.","defaults":{"light":"mergeEditor.conflictingLines.background","dark":"mergeEditor.conflictingLines.background"}},{"id":"cody.fixup.conflictBorder","description":"The border of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"mergeEditor.conflict.unhandledFocused.border","dark":"mergeEditor.conflict.unhandledFocused.border"}},{"id":"cody.fixup.conflictedBackground","description":"The background of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"#ffffff00","dark":"#00000000"}},{"id":"cody.fixup.conflictedBorder","description":"The border of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"mergeEditor.conflict.unhandledUnfocused.border","dark":"mergeEditor.conflict.unhandledUnfocused.border"}},{"id":"cody.fixup.incomingBackground","description":"The background of text Cody will edit.","defaults":{"light":"merge.incomingContentBackground","dark":"merge.incomingContentBackground"}},{"id":"cody.fixup.incomingBorder","description":"The border around text Cody will edit.","defaults":{"light":"#436EB1","dark":"#436EB1"}}],"viewsContainers":{"activitybar":[{"id":"cody","title":"Cody","icon":"resources/cody.svg"}]},"views":{"cody":[{"type":"webview","id":"cody.chat","name":"Chat"}]},"commands":[{"command":"cody.feedback","title":"Feedback","category":"Cody","group":"Cody","icon":"$(feedback)"},{"command":"cody.command.autoedit.open-debug-panel","title":"Debug Auto-Edit","category":"Cody","group":"Cody","icon":"$(debug)","enablement":"cody.activated"},{"command":"cody.command.explain-output","title":"Ask Cody to Explain","category":"Cody Command","icon":"$(cody-logo)","enablement":"cody.activated && terminalTabsSingularSelection"},{"command":"cody.command.edit-code","category":"Cody Command","title":"Edit Code","enablement":"cody.activated","icon":"$(wand)"},{"command":"cody.command.explain-code","category":"Cody Command","title":"Explain Code","icon":"$(output)","enablement":"cody.activated"},{"command":"cody.command.unit-tests","category":"Cody Command","title":"Generate Unit Tests","icon":"$(package)","enablement":"cody.activated"},{"command":"cody.command.document-code","category":"Cody Command","title":"Document Code","icon":"$(book)","enablement":"cody.activated"},{"command":"cody.command.smell-code","category":"Cody Command","title":"Find Code Smells","icon":"$(checklist)","enablement":"cody.activated"},{"command":"cody.menu.custom-commands","category":"Cody Menu","title":"Custom Commands","icon":"$(tools)","enablement":"cody.activated && workspaceFolderCount > 0"},{"command":"cody.menu.commands-settings","category":"Cody Settings","title":"Custom Commands Settings","icon":"$(gear)","enablement":"cody.activated"},{"command":"cody.command.explain-history","category":"Cody Command","title":"Explain Code History","enablement":"cody.activated && config.cody.experimental.noodle"},{"command":"cody.command.generate-commit","category":"Cody Command","group":"Commit","title":"Generate Commit Message (Experimental)","icon":"$(cody-logo)","when":"cody.activated && config.git.enabled && !cody.isGeneratingCommit"},{"command":"cody.command.abort-commit","category":"Cody Command","group":"Commit","title":"Stop Generating","icon":"$(debug-stop)","when":"cody.activated && cody.isGeneratingCommit"},{"command":"cody.auth.signout","category":"Cody","title":"Sign Out","icon":"$(sign-out)","enablement":"cody.activated"},{"command":"cody.auth.signin","category":"Cody","title":"Switch Account…"},{"command":"cody.auth.refresh","category":"Cody","title":"Refresh Settings (Debug)","enablement":"config.cody.internal.unstable"},{"command":"cody.auth.requestEndpointSettings","category":"Cody","title":"Schedule export endpoint settings to Sourcegraph plugin"},{"command":"cody.settings.extension","category":"Cody","title":"Extension Settings","group":"Cody","icon":"$(gear)"},{"command":"cody.settings.extension.chat","category":"Cody","title":"Chat Settings","group":"Cody","icon":"$(gear)"},{"command":"cody.status-bar.interacted","category":"Cody","title":"Cody Settings","group":"Cody","icon":"$(settings-gear)","enablement":"cody.activated"},{"command":"cody.show-page","category":"Cody","title":"Open Account Page","group":"Cody","enablement":"cody.activated"},{"command":"cody.menu.commands","category":"Cody Menu","title":"Cody Commands","enablement":"cody.activated","icon":"$(cody-logo)"},{"command":"cody.autocomplete.openTraceView","category":"Cody","title":"Open Autocomplete Trace View","enablement":"cody.activated && config.cody.suggestions.mode === 'autocomplete'"},{"command":"cody.autocomplete.manual-trigger","category":"Cody","title":"Trigger Autocomplete at Cursor","enablement":"cody.activated && config.cody.suggestions.mode === 'autocomplete' && !editorReadonly && !editorHasSelection && !inlineSuggestionsVisible"},{"command":"cody.chat.signIn","category":"Cody","group":"Cody","title":"Sign In","enablement":"!cody.activated"},{"command":"cody.chat.new","category":"Cody","title":"New Chat","enablement":"cody.activated","group":"Cody","icon":"$(new-comment-icon)"},{"command":"cody.chat.newEditorPanel","category":"Cody","title":"New Chat in Editor","enablement":"cody.activated","group":"Cody","icon":"$(new-comment-icon)"},{"command":"cody.chat.newPanel","category":"Cody","group":"Cody","title":"New Chat in Sidebar","enablement":"cody.activated","icon":"$(new-comment-icon)"},{"command":"cody.chat.moveFromEditor","category":"Cody","title":"Move Chat from Editor to Main Cody Panel","when":"cody.activated && view == cody.chat","enablement":"cody.activated","group":"Cody","icon":"$(layout-sidebar-left)"},{"command":"cody.chat.view.popOut","category":"Cody","title":"Pop out","enablement":"cody.activated","group":"Cody","icon":"$(link-external)"},{"command":"cody.chat.history.clear","category":"Cody","title":"Delete All Chats","group":"Cody","icon":"$(trash)","enablement":"cody.activated"},{"command":"cody.chat.history.delete","category":"Cody","title":"Delete Chat","group":"Cody","icon":"$(trash)","enablement":"cody.activated"},{"command":"cody.chat.history.export","category":"Cody","title":"Export Chats as JSON","group":"Cody","icon":"$(arrow-circle-down)","enablement":"cody.activated"},{"command":"cody.chat.history.panel","category":"Cody","title":"Chat History","group":"Cody","icon":"$(list-unordered)","enablement":"cody.activated"},{"command":"cody.search.index-update","category":"Cody","group":"Cody","title":"Update search index for current workspace folder","icon":"$(refresh)","enablement":"cody.activated"},{"command":"cody.mention.selection","category":"Cody","group":"Chat","title":"Add Selection to Cody Chat","icon":"$(mention)","enablement":"cody.activated && editorHasSelection"},{"command":"cody.mention.file","category":"Cody","group":"Chat","title":"Add File to Cody Chat","icon":"$(mention)","enablement":"cody.activated && resourceSet"},{"command":"cody.debug.export.logs","category":"Cody Debug","group":"Debug","title":"Export Logs…"},{"command":"cody.debug.outputChannel","category":"Cody Debug","group":"Debug","title":"Open Output Channel"},{"command":"cody.debug.enable.all","category":"Cody Debug","group":"Debug","title":"Enable Debug Mode","enablement":"!config.cody.debug.verbose"},{"command":"cody.debug.reportIssue","category":"Cody Debug","group":"Debug","title":"Report Issue"},{"command":"cody.debug.heapDump","category":"Cody Debug","group":"Debug","title":"Heap Dump"},{"command":"cody.copy.version","category":"Cody Debug","group":"Debug","icon":"$(copy)","title":"Copy Cody Extension Version"},{"command":"cody.debug.logCharacterCounters","title":"[Internal] Log character logger counters","category":"Cody Debug","group":"Debug","when":"cody.activated"},{"command":"cody.test.set-context-filters","title":"[Internal] Set Context Filters Overwrite","enablement":"cody.activated && cody.devOrTest"},{"command":"cody.command.insertCodeToCursor","title":"Insert Code at Cursor","enablement":"cody.activated"},{"command":"cody.command.insertCodeToNewFile","title":"Save Code to New File...","enablement":"cody.activated"},{"command":"cody.command.autoedit-manual-trigger","title":"Autoedits Manual Trigger","enablement":"cody.activated && config.cody.suggestions.mode == 'auto-edit'"},{"command":"cody.command.autoedit.open-debug-panel","category":"Cody","title":"Debug Auto-Edit","enablement":"cody.activated"}],"keybindings":[{"command":"cody.chat.signIn","key":"alt+l","when":"!cody.activated"},{"command":"cody.chat.signIn","key":"alt+k","when":"!cody.activated"},{"command":"cody.chat.toggle","key":"alt+l","when":"cody.activated"},{"command":"cody.mention.selection","key":"alt+l","when":"cody.activated && editorTextFocus && editorHasSelection"},{"command":"cody.chat.new","key":"shift+alt+/","when":"cody.activated && !editorTextFocus"},{"command":"cody.command.edit-code","key":"alt+k","when":"cody.activated && !editorReadonly"},{"command":"cody.command.execute-prompt","key":"shift+alt+p","when":"cody.activated"},{"command":"cody.command.document-code","key":"alt+d","when":"cody.activated && !editorReadonly"},{"command":"cody.menu.commands","key":"alt+c","mac":"alt+c","when":"cody.activated"},{"command":"cody.menu.custom-commands","key":"shift+alt+c","when":"cody.activated"},{"command":"-github.copilot.generate","key":"ctrl+enter"},{"command":"-extension.vim_tab","key":"tab","when":"editorTextFocus && vim.active && vim.mode == 'Normal' && !inDebugRepl"},{"command":"cody.autocomplete.manual-trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && config.cody.suggestions.mode === 'autocomplete' && !inlineSuggestionsVisible"},{"command":"cody.fixup.acceptNearest","key":"alt+a","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.fixup.retryNearest","key":"alt+r","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.show.lastUsedActions","key":"alt+p","when":"cody.activated && !editorReadonly"},{"command":"cody.fixup.undoNearest","key":"alt+x","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.fixup.cancelNearest","key":"alt+z","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.supercompletion.jumpTo","args":["next"],"key":"shift+ctrl+down","when":"cody.activated && !editorReadonly && cody.hasActionableSupercompletion"},{"command":"cody.supercompletion.jumpTo","args":["previous"],"key":"shift+ctrl+up","when":"cody.activated && !editorReadonly && cody.hasActionableSupercompletion"},{"command":"cody.supersuggest.accept","key":"tab","when":"editorTextFocus && cody.activated && cody.supersuggest.active && !cody.nextCursorSuggested"},{"command":"cody.supersuggest.dismiss","key":"escape","when":"editorTextFocus && cody.activated && cody.supersuggest.active && !cody.nextCursorSuggested"},{"command":"cody.supersuggest.testExample","key":"ctrl+alt+enter","when":"cody.activated && config.cody.suggestions.mode == 'auto-edit'"},{"command":"cody.nextCursor.accept","key":"tab","when":"cody.activated && config.cody.suggestions.mode == 'auto-edit' && cody.nextCursorSuggested"},{"command":"cody.nextCursor.discard","key":"escape","when":"cody.activated && config.cody.suggestions.mode == 'auto-edit' && cody.nextCursorSuggested"}],"submenus":[{"label":"Cody","id":"cody.submenu"}],"menus":{"commandPalette":[{"command":"cody.command.autoedit.open-debug-panel","when":"cody.activated"},{"command":"cody.command.edit-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.explain-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.smell-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.unit-tests","when":"cody.activated && editorIsOpen"},{"command":"cody.command.document-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.explain-history","when":"cody.activated && editorIsOpen && config.cody.experimental.noodle"},{"command":"cody.command.generate-commit","when":"cody.activated && config.git.enabled && !cody.isGeneratingCommit"},{"command":"cody.command.abort-commit","when":"cody.activated && cody.isGeneratingCommit"},{"command":"cody.chat.signIn","when":"!cody.activated"},{"command":"cody.show-page","when":"false"},{"command":"cody.test.set-context-filters","when":"cody.activated && cody.devOrTest"},{"command":"cody.chat.view.popOut","when":"false","_comment":"Hidden because it is only a wrapper around the workspace pop out command and would place any editor tab (not just Cody chat) in a new window."},{"command":"cody.command.explain-output","when":"false"},{"command":"cody.chat.newEditorPanel","when":"cody.activated"}],"editor/context":[{"submenu":"cody.submenu","group":"0_cody"}],"cody.submenu":[{"command":"cody.mention.selection","group":"0_cody","when":"cody.activated && editorHasSelection"},{"command":"cody.mention.file","group":"0_cody","when":"cody.activated && !editorHasSelection"},{"command":"cody.chat.newEditorPanel","when":"cody.activated && !editorHasSelection","group":"ask"},{"command":"cody.command.explain-code","when":"cody.activated","group":"command"},{"command":"cody.command.explain-history","when":"cody.activated && editorTextFocus && config.cody.experimental.noodle","group":"command"},{"command":"cody.command.edit-code","when":"cody.activated","group":"ask"},{"command":"cody.command.unit-tests","when":"cody.activated","group":"command"},{"command":"cody.command.document-code","when":"cody.activated","group":"command"},{"command":"cody.command.smell-code","when":"cody.activated","group":"command"},{"command":"cody.menu.custom-commands","when":"cody.activated && cody.menu.custom-commands.enable","group":"custom-commands"},{"command":"cody.chat.signIn","when":"!cody.activated","group":"other"}],"view/title":[{"command":"cody.menu.commands","when":"view == cody.chat && cody.activated","group":"navigation@1"}],"editor/title":[{"command":"cody.menu.commands","when":"cody.activated && !editorReadonly && (resourceScheme == file || activeWebviewPanelId == cody.editorPanel)","group":"navigation","visibility":"visible"},{"command":"cody.chat.moveFromEditor","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@1","visibility":"visible"},{"command":"cody.chat.newEditorPanel","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@2","visibility":"visible"},{"command":"cody.chat.history.panel","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@3","visibility":"visible"},{"command":"cody.chat.view.popOut","when":"view == cody.chat && cody.activated && !isAuxiliaryEditorPart","group":"navigation@4","visibility":"visible"},{"command":"cody.settings.extension.chat","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@5","visibility":"visible"}],"terminal/context":[{"command":"cody.command.explain-output","group":"0_cody","when":"cody.activated"}],"scm/title":[{"command":"cody.command.generate-commit","when":"cody.activated && config.git.enabled && scmProvider == git && !cody.isGeneratingCommit","group":"navigation@1"},{"command":"cody.command.abort-commit","when":"cody.activated && scmProvider == git && cody.isGeneratingCommit","group":"navigation@1"}],"webview/context":[{"command":"cody.command.insertCodeToCursor","when":"webviewSection == 'codeblock-actions'"},{"command":"cody.command.insertCodeToNewFile","when":"webviewSection == 'codeblock-actions'"}]},"configuration":{"type":"object","title":"Cody","properties":{"cody.serverEndpoint":{"order":1,"type":"string","description":"URL to the Sourcegraph instance.","examples":"https://example.sourcegraph.com","markdownDeprecationMessage":"**Deprecated**: Please sign in via the UI instead. If you are already signed in, you can empty this field to remove this warning.","deprecationMessage":"Deprecated: Please sign in via the UI instead."},"cody.codebase":{"order":2,"type":"string","markdownDescription":"A Git repository URL to use instead of allowing Cody to infer the Git repository from the workspace.","examples":["https://github.com/sourcegraph/cody","ssh://git@github.com/sourcegraph/cody"]},"cody.customHeaders":{"order":4,"type":"object","markdownDescription":"Adds custom HTTP headers to all network requests to the Sourcegraph endpoint. Defining required headers here ensures requests are properly forwarded through intermediary proxy servers, which may mandate certain custom headers for internal or external communication.","default":{},"examples":[{"Cache-Control":"no-cache","Proxy-Authenticate":"Basic"}]},"cody.suggestions.mode":{"type":"string","enum":["autocomplete","auto-edit","off"],"enumDescriptions":["Suggests standard code completions as you type.","Suggests advanced context-aware code edits as you navigate the codebase. Experimental feature for Pro and Enterprise users.","Disables all suggestions."],"default":"autocomplete","markdownDescription":"Controls the suggestion mode for Cody"},"cody.autocomplete.triggerDelay":{"order":5,"type":"number","markdownDescription":"The trigger delay ensures a minimum wait time before showing autocomplete suggestions to avoid accidental autocomplete triggers.","default":0},"cody.autocomplete.languages":{"order":5,"type":"object","markdownDescription":"Enables or disables code autocompletions for specified [language ids](https://code.visualstudio.com/docs/languages/identifiers). `\"*\"` is the default fallback if no language-specific setting is found.\n\nThe default setting: \n\n```json\n{\n  \"*\": true\n}\n```\n\nTo disable autocomplete for a given [language id](https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers) set its value to `false`, for example:\n\n```json\n{\n  \"*\": true,\n  \"plaintext\": false\n}\n```","default":{"*":true},"examples":[{"*":true,"plaintext":false}]},"cody.commandCodeLenses":{"order":8,"type":"boolean","markdownDescription":"Adds code lenses to current file for quick access to Cody commands.","default":false},"cody.chat.preInstruction":{"order":6,"type":"string","markdownDescription":"A custom instruction to be included at the start of all chat messages (e.g. \"Answer all my questions in Spanish.\")","examples":["Answer all my questions in Spanish."]},"cody.chat.defaultLocation":{"order":6,"type":"string","enum":["sticky","sidebar","editor"],"markdownDescription":"Controls where the Cody chat view opens when the user invokes the `Cody: New Chat` command, or the Alt+L and Alt+/ shortcuts.","enumDescriptions":["Opens in the last-activated view location, which is set whenever the user explicitly chooses to open chat in a given location","Opens in the sidebar","Opens in an editor panel"],"default":"sticky"},"cody.edit.preInstruction":{"order":7,"type":"string","markdownDescription":"A custom instruction to be included at the end of all instructions for edit commands (e.g. \"Write all unit tests with Jest instead of detected framework.\")","examples":["Write all unit tests with Jest instead of detected framework."]},"cody.codeActions.enabled":{"order":11,"title":"Cody Code Actions","type":"boolean","markdownDescription":"Add Cody options to Quick Fix menus for fixing, explaining, documenting, and editing code.","default":true},"cody.commandHints.enabled":{"order":12,"title":"Cody Command Hints","type":"boolean","markdownDescription":"Enable hints for Cody commands such as \"Opt+K to Edit\" or \"Opt+D to Document\"","default":true},"cody.debug.verbose":{"order":99,"type":"boolean","markdownDescription":"Enables verbose debug output. Debug messages may contain more details if the invocation includes verbose information."},"cody.debug.filter":{"order":99,"type":"string","markdownDescription":"Regular expression to filter debug output. If empty, defaults to '.*', which prints all messages."},"cody.autocomplete.advanced.provider":{"type":"string","default":"default","enum":["default","experimental-ollama"],"enumDescriptions":["Our recommended setup with the best balance of quality and latency. We continuously update this for optimal performance.","Experimental support for Ollama users. Use `cody.autocomplete.experimental.ollamaOptions` to configure requests to Ollama server."],"markdownDescription":"The provider for code autocomplete. Users should rely on the `default` provider for the best experience. The underlying model can be found in the Cody output channel logs."},"cody.autocomplete.completeSuggestWidgetSelection":{"type":"boolean","default":true,"markdownDescription":"Autocomplete based on the currently selection in the suggest widget. Requires the VS Code user setting `editor.inlineSuggest.suppressSuggestions` set to true and will change it to true in user settings if it is not true."},"cody.autocomplete.formatOnAccept":{"type":"boolean","default":false,"markdownDescription":"Format completions on accept using [the default document formatter](https://code.visualstudio.com/docs/editor/codebasics#_formatting)."},"cody.autocomplete.disableInsideComments":{"type":"boolean","default":false,"markdownDescription":"Prevent autocomplete requests while inside code comments."},"cody.rules.enabled":{"type":"boolean","markdownDescription":"[EXPERIMENTAL] Apply Sourcegraph rules (from `*.rule.md` files) to Cody chats and inline edits.","default":false},"openctx.enable":{"type":"boolean","markdownDescription":"Enable OpenCtx providers for Cody.","default":true},"openctx.providers":{"type":"object","markdownDescription":"OpenCtx providers configuration.","default":{}},"cody.mcpServers":{"type":"object","markdownDescription":"Configuration for MCP servers to use with agentic chat. Enterprise instance with feature flag enabled required.","default":{}},"cody.internal.unstable":{"order":999,"type":"boolean","markdownDescription":"[INTERNAL ONLY] Enable all unstable experimental features.","default":false},"cody.internal.debug.tokenUsage":{"order":999,"type":"boolean","markdownDescription":"[INTERNAL ONLY] Enable debug display of token usage in chat messages.","default":false},"cody.net.mode":{"type":"string","enum":["auto","bypass","vscode"],"enumDescriptions":["Default behavior. If `cody.net.proxy.endpoint` is configured, bypassing is automatically enabled, otherwise direct is used.","Bypass VSCode's network stack, using Cody's instead.","Ignore Cody's network stack, including proxy settings, even if `cody.net.proxy.endpoint` is configured, and use VSCode's network stack instead."],"default":"auto","markdownDescription":"[EXPERIMENTAL] Forcefully enable/disable bypassing VSCode's network stack. Bypassing is automatically enabled if `cody.net.proxy.endpoint` is configured. In some scenarios bypassing VSCode network settings could give some performance benefits and forces usage of Cody's proxy instead of one configured globally for VSCode."},"cody.net.proxy.endpoint":{"markdownDescription":"The proxy service to use when proxying requests to the Sourcegraph instance. Supports HTTP(S), SOCKS 4/5, and UNIX domain sockets. When using HTTP(S) or SOCKS proxies, include the port number with a colon. For UNIX domain sockets, use either the full path or prefix with a tilde for a path in the OS user's home directory.\n\nExamples:\n- `https://localhost:7080`\n- `socks5://1.2.3.4:1080`\n- `unix://~/cody-proxy.sock`","type":"string","default":"","pattern":"^((http|https|socks|socks4|socks4a|socks5|socks5h)://[^:]+:\\d+|unix://(~|/|[a-zA-Z]:\\\\).+)?$","examples":["https://localhost:7080","socks5://1.2.3.4:1080","unix://~/cody-proxy.sock"]},"cody.net.proxy.skipCertValidation":{"description":"Whether to skip proxy server CA cert validation. Useful if the proxy server uses a self-signed certificate.","type":"boolean","default":false},"cody.agentic.context.experimentalShell":{"type":"boolean","value":false,"markdownDeprecationMessage":"**Deprecated** Enable Agents like Deep Cody to autonomously execute shell commands in your environment for context. Enable with caution as mistakes are possible.","deprecationMessage":"Deprecated. Now configurable via UI."},"cody.chat.agenticContext":{"order":13,"title":"Agentic context for chat","type":"boolean","markdownDescription":"Enable agentic context for chat.","default":true},"cody.agentic.context.experimentalOptions":{"type":"object","properties":{"shell":{"allow":{"type":"array","default":[]},"block":{"type":"array","default":[]}}},"default":{},"examples":[{"shell":{"allow":["git","ls","find"],"block":["history","sudo","rm"]}}],"markdownDescription":"'shell' field is used to configure shell command execution for agents (like Deep Cody) when terminal context is enabled. The 'shell' field has two properties:\n\n- 'allow': Accepts either [] to allow all commands or an array of specific command prefixes\n- 'block': An array of command prefixes to block, which combines with built-in safety blocklist\n\nBlocked commands take precedence over allowed commands. Command outputs are used as context. Remove the 'shell' field to allow all commands."},"cody.net.proxy.cacert":{"markdownDescription":"Either the PEM-encoded CA certificate the proxy uses (replace newlines with `\\n`), or the path (absolute or tilde) to the file containing that certificate.\n\nExamples:\n- `~/.mitmproxy/mitmproxy-ca-cert.pem`\n- `-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----`","type":"string","default":"","examples":["~/.mitmproxy/mitmproxy-ca-cert.pem","-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----"]},"cody.auth.externalProviders":{"type":"array","markdownDescription":"Configure external authentication providers for Cody requests. Each provider consists of a command that generates HTTP headers used for authentication for a given endpoint.\n\n**How it works:**\n1. The specified command outputs a JSON object with header-value pairs\n2. These headers are included in authenticated Cody requests to the specified endpoint\n3. HTTP authentication proxy need to be used to enable custom authentication flows (e.g. JWT tokens, Oath2, etc)\n\nSee [HTTP Authentication Proxies](https://sourcegraph.com/docs/admin/auth#http-authentication-proxies) for proxy configuration.","items":{"type":"object","required":["endpoint","executable"],"properties":{"endpoint":{"type":"string","description":"The endpoint URL of the Sourcegraph instance"},"executable":{"type":"object","required":["commandLine"],"properties":{"commandLine":{"type":"array","items":{"type":"string"},"description":"Command line arguments to execute the command."},"environment":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables to set when executing the command."},"shell":{"type":"string","description":"If true, runs command inside of a shell. Uses '/bin/sh' on Unix, and process.env.ComSpec on Windows. A different shell can be specified as a string."},"timeout":{"type":"number","description":"Timeout for executing the command in milliseconds."},"windowsHide":{"type":"boolean","description":"Whether to hide the console window that would normally be created for the child process on Windows."}}}}},"default":[]}}},"icons":{"cody-logo":{"description":"Cody logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0041"}},"cody-logo-heavy":{"description":"Cody logo heavy","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0042"}},"anthropic-logo":{"description":"Anthropic logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0043"}},"openai-logo":{"description":"OpenAI logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0044"}},"mistral-logo":{"description":"Mistral logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0045"}},"ollama-logo":{"description":"Ollama logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0046"}},"gemini-logo":{"description":"Gemini logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0047"}},"new-comment-icon":{"description":"New comment icon","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0048"}},"discord-logo":{"description":"Discord logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0049"}},"cody-logo-heavy-slash":{"description":"Cody logo heavy slash","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\004A"}}}},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Cody only uses providers (configured in `openctx.providers`) from trusted workspaces because providers may execute arbitrary code.","restrictedConfigurations":["openctx.providers"]}},"dependencies":{"@anthropic-ai/sdk":"^0.33.1","@modelcontextprotocol/sdk":"^1.7.0","@openctx/provider-linear-issues":"^0.0.9","@openctx/vscode-lib":"^0.0.26","@opentelemetry/api":"^1.7.0","@opentelemetry/core":"^1.18.1","@opentelemetry/exporter-metrics-otlp-http":"^0.45.1","@opentelemetry/exporter-trace-otlp-http":"^0.45.1","@opentelemetry/instrumentation":"^0.45.1","@opentelemetry/instrumentation-http":"^0.45.1","@opentelemetry/resources":"^1.18.1","@opentelemetry/sdk-metrics":"^1.18.1","@opentelemetry/sdk-trace-base":"^1.18.1","@opentelemetry/sdk-trace-node":"^1.18.1","@opentelemetry/semantic-conventions":"^1.18.1","@radix-ui/react-accordion":"^1.2.0","@radix-ui/react-collapsible":"^1.1.0","@radix-ui/react-dialog":"^1.0.5","@radix-ui/react-form":"^0.1.0","@radix-ui/react-label":"^2.1.1","@radix-ui/react-popover":"^1.0.7","@radix-ui/react-progress":"^1.1.0","@radix-ui/react-scroll-area":"^1.2.3","@radix-ui/react-slot":"^1.0.2","@radix-ui/react-switch":"^1.1.2","@radix-ui/react-tabs":"^1.1.0","@radix-ui/react-tooltip":"^1.0.7","@sentry/browser":"^7.107.0","@sentry/core":"^7.107.0","@sentry/node":"^7.107.0","@sourcegraph/cody-noxide":"workspace:*","@sourcegraph/cody-shared":"workspace:*","@sourcegraph/prompt-editor":"workspace:*","@sourcegraph/tree-sitter-wasms":"^0.1.9","@types/he":"^1.2.3","@types/mdast":"^4.0.4","@types/react":"18.2.79","@types/react-dom":"18.2.25","@vscode/codicons":"^0.0.35","agent-base":"^7.1.1","async-mutex":"^0.4.0","axios":"^1.3.6","browser-fs-access":"^0.37.0","canvaskit-wasm":"^0.39.1","class-variance-authority":"^0.7.0","classnames":"^2.5.1","clsx":"^2.1.1","cmdk":"^1.0.0","crypto-js":"^4.2.0","detect-indent":"7.0.0","diff":"^5.2.0","fast-myers-diff":"^3.2.0","fast-xml-parser":"^4.3.2","framer-motion":"^12.5.0","fzf":"^0.5.2","glob":"^7.2.3","graceful-fs":"^4.2.11","he":"^1.2.0","highlight.js":"11.8.0","hpagent":"^1.2.0","ini":"^4.1.2","js-levenshtein":"^1.1.6","jsonrepair":"^3.12.0","lexical":"^0.17.0","lodash":"^4.17.21","lru-cache":"^10.0.0","lucide-react":"^0.378.0","mac-ca":"^2.0.3","marked":"^4.0.16","mkdirp":"^3.0.1","os-browserify":"^0.3.0","postcss-scss":"^4.0.9","proxy-agent":"^6.4.0","react-intersection-observer":"^9.13.1","react-markdown":"^9.0.1","rehype-highlight":"^6.0.0","rehype-sanitize":"^6.0.0","remark-gfm":"^4.0.0","safe-stable-stringify":"^2.5.0","semver":"^7.5.4","shiki":"^1.26.1","signal-exit":"^4.1.0","socks-proxy-agent":"^8.0.1","tailwind-merge":"^2.3.0","tailwindcss":"^3.4.3","unified":"^11.0.5","unist-util-visit":"^5.0.0","unzipper":"^0.10.14","uuid":"^9.0.0","valibot":"1.0.0-beta.9","vscode-languageserver-textdocument":"^1.0.8","vscode-uri":"^3.0.8","wink-nlp-utils":"^2.1.0","zod-to-json-schema":"^3.24.3"},"devDependencies":{"7zip-min":"^1.4.5","@google-cloud/pubsub":"^3.7.3","@npmcli/promise-spawn":"^7.0.2","@playwright/test":"1.47.2","@pollyjs/adapter":"^6.0.6","@pollyjs/adapter-node-http":"^6.0.6","@pollyjs/core":"^6.0.6","@pollyjs/persister":"^6.0.6","@pollyjs/persister-fs":"^6.0.6","@pollyjs/utils":"^6.0.6","@storybook/preview-api":"^8.0.5","@types/7zip-min":"^1.3.3","@types/crypto-js":"^4.2.2","@types/dedent":"^0.7.0","@types/diff":"^5.2.1","@types/express":"^4.17.17","@types/fs-extra":"^11.0.4","@types/glob":"^8.0.0","@types/graceful-fs":"^4.1.9","@types/ini":"^4.1.0","@types/jest-image-snapshot":"^6.4.0","@types/js-levenshtein":"^1.1.1","@types/lodash":"^4.14.195","@types/marked":"^5.0.0","@types/mocha":"^10.0.6","@types/node-fetch":"^2.6.4","@types/npmcli__promise-spawn":"^6.0.3","@types/on-headers":"^1.0.3","@types/pako":"^2.0.3","@types/semver":"^7.5.0","@types/signal-exit":"^3.0.4","@types/unzipper":"^0.10.7","@types/uuid":"^9.0.2","@types/vscode":"^1.79.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"^0.0.47","@vscode/vsce":"^2.22.0","ajv":"^8.14.0","ajv-formats":"^3.0.1","buildkite-test-collector":"^1.7.2","concurrently":"^8.2.0","cross-env":"^7.0.3","dedent":"^0.7.0","dotenv":"^16.4.5","esbuild":"^0.18.20","express":"^4.18.2","fast-json-stable-stringify":"^2.1.0","franc-min":"^6.2.0","fs-extra":"^11.2.0","fuzzysort":"^2.0.4","http-proxy-middleware":"^3.0.0","immer":"^10.1.1","jest-image-snapshot":"^6.4.0","keytar":"^7.9.0","kill-sync":"^1.0.3","mocha":"^10.2.0","nock":"^13.5.4","node-fetch":"^2.6.4","normalize-url":"5.3.1","on-headers":"^1.0.2","ovsx":"^0.8.2","pako":"^2.1.0","path-browserify":"^1.0.1","playwright":"1.47.2","postcss":"^8.4.38","postcss-nested":"^6.0.1","react-head":"^3.4.2","symlink-dir":"^6.0.2","type-fest":"^4.26.1","typescript-language-server":"^4.3.3","ulidx":"^2.3.0","vite-plugin-svgr":"^4.2.0","vscode-jsonrpc":"^8.2.0","vscode-languageserver-protocol":"^3.17.5","yaml":"^2.3.4","zod":"^3.23.8"}},"location":{"$mid":1,"path":"/home/pengu/.vscode-oss/extensions/sourcegraph.cody-ai-1.106.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"sourcegraph","metadata":{"installedTimestamp":1751287688561,"pinned":false,"source":"gallery","id":"20d12578-788a-48ca-96b6-43abf885dc34","publisherId":"755cb281-9734-491c-866f-4facd1750385","publisherDisplayName":"sourcegraph","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":155914585},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.4.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint  src build pythonExtensionApi","lint-fix":"eslint --fix src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.2.2","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^8.57.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.31.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/home/pengu/.vscode-oss/extensions/ms-python.python-2025.4.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1751288435831,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":23961664},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.6.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.2.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/pengu/.vscode-oss/extensions/ms-python.debugpy-2025.6.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1751288435831,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":38034335},"isValid":true,"validations":[],"preRelease":false}]}