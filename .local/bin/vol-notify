#!/usr/bin/env bash
# vol-notify: adjust default sink volume *and* show a swaync notification
# Usage examples:
#   vol-notify +5%   # raise volume by 5 %
#   vol-notify -5%   # lower volume by 5 %
#   vol-notify toggle # toggle mute state

set -euo pipefail

step="${1:-}"

if [[ -z "$step" ]]; then
  echo "Usage: vol-notify [+N% | -N% | toggle]" >&2
  exit 1
fi

if [[ "$step" == "toggle" ]]; then
  wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
else
  # ensure limiter stays at 100 % (+boost disabled for wpctl)
  wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ "$step"
fi

status=$(wpctl get-volume @DEFAULT_AUDIO_SINK@)
if [[ "$status" == *"MUTED"* ]]; then
  muted=yes
  vol=0
else
  muted=no
  vol=$(awk '{printf "%d", $2*100}' <<<"$status")
fi

if [[ $muted == yes || $vol -eq 0 ]]; then
  icon="audio-volume-muted"
  body="Muted"
else
  icon="audio-volume-high"
  body="$vol %"
fi

notify-send -a Volume \
           -h string:x-canonical-private-synchronous:volume \
           -h int:value:"$vol" \
           -i "$icon" "Volume" "$body"
